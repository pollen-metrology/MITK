diff --git a/CMake/GenerateDCMTKConfigure.cmake b/CMake/GenerateDCMTKConfigure.cmake
index c936b4d..d82781b 100644
--- a/CMake/GenerateDCMTKConfigure.cmake
+++ b/CMake/GenerateDCMTKConfigure.cmake
@@ -548,6 +548,30 @@ ENDIF(DCMTK_WITH_OPENSSL)
 INCLUDE(${DCMTK_CMAKE_INCLUDE}CMake/dcmtkTryCompile.cmake)
 INCLUDE(${DCMTK_CMAKE_INCLUDE}CMake/dcmtkTryRun.cmake)

+IF(NOT HAVE_PROTOTYPE_STD__ISINF)
+  unset(HAVE_PROTOTYPE_STD__ISINF CACHE)
+  DCMTK_TRY_COMPILE(HAVE_PROTOTYPE_STD__ISINF "std::isinf is provided as function template"
+    "#include <cmath>
+
+    int main()
+    {
+      std::isinf(0.0);
+      return 0;
+    }")
+ENDIF(NOT HAVE_PROTOTYPE_STD__ISINF)
+
+IF(NOT HAVE_PROTOTYPE_STD__ISNAN)
+  unset(HAVE_PROTOTYPE_STD__ISNAN CACHE)
+  DCMTK_TRY_COMPILE(HAVE_PROTOTYPE_STD__ISNAN "std::isnan is provided as function template"
+    "#include <cmath>
+
+    int main()
+    {
+      std::isnan(0.0);
+      return 0;
+    }")
+ENDIF(NOT HAVE_PROTOTYPE_STD__ISNAN)
+
 IF(NOT DEFINED C_CHAR_UNSIGNED)
   MESSAGE(STATUS "Checking signedness of char")
   DCMTK_TRY_RUN(C_CHAR_SIGNED C_CHAR_SIGNED_COMPILED ${CMAKE_BINARY_DIR}/CMakeTmp/Char

diff --git a/DCMTKConfig.cmake.in b/DCMTKConfig.cmake.in
index 89188d2..b77a856 100644
--- a/CMake/DCMTKConfig.cmake.in
+++ b/CMake/DCMTKConfig.cmake.in
@@ -33,8 +33,15 @@ SET(DCMTK_OVERWRITE_WIN32_COMPILER_FLAGS @DCMTK_OVERWRITE_WIN32_COMPILER_FLAGS@)
 SET(DCMTK_WIDE_CHAR_FILE_IO_FUNCTIONS @DCMTK_WIDE_CHAR_FILE_IO_FUNCTIONS@)
 SET(DCMTK_WIDE_CHAR_MAIN_FUNCTION @DCMTK_WIDE_CHAR_MAIN_FUNCTION@)

+@DCMTK_INCLUDE_DIR_CONFIGS@
+
 SET_AND_CHECK(DCMTK_TARGETS "@PACKAGE_DCMTK_CMKDIR_CONFIG@/DCMTKTargets.cmake")

+SET(DCMTK_INCLUDE_DIRS "")
+FOREACH(module config ${DCMTK_MODULES})
+  LIST(APPEND DCMTK_INCLUDE_DIRS ${DCMTK_${module}_INCLUDE_DIR})
+ENDFOREACH(module)
+
 @DCMTK_CONFIG_CODE@

 # Compatibility: This variable is deprecated
