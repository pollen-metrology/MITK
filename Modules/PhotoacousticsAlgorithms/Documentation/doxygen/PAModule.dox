/**
\page PAModulePage The Photoacoustic Algorithms Module

\tableofcontents

\section PAModulePageOverview Overview

The Photoacoustic Algorithms Module provides a <strong>set of filters for beamforming and post-processing of photoacoustic and ultrasound data</strong>.
The main features are:
<ul>
  <li> Management of all filters through a single class PhotoacousticImage
  <li> Beamforming of ultrasound and photoacoustic image data.
  <ul>
    <li> Beamforming using the DAS and DMAS Algorithms.
    <li> Optional real-time beamforming capabilities by the usage of openCL GPU computing
  </ul>
  <li> Post/Pre-Processing of any kind of images.
  <ul>
    <li> Crop Filter for removing artefacts in upper and lower edge of the image.
    <li> Multiple B-Mode Filter implementations with resampling and logarithmic filter.
    <li> Bandpass Filter
  </ul>
</ul>

To use the GPU capabilities of this module, openCL needs to be activated in CMAKE. The custom build option "camiPhotoacousticsWorkstation" activates all needed CMAKE options, as well as openCL.
To build the project using openCL, the openCL libraries provided by your graphic card vendor need to be installed. The GPU capabilies of this module have been only tested using nvidia hardware, but, as openCL has been also implemented by AMD, this should work on either one. (Those are included in the CUDA package for nvidia graphic card owners)

The \link org_mitk_gui_qt_photoacoustics_imageprocessing Photoacoustic Imageprocessing plugin \endlink provides a GUI to access all of thePhotoacoustic Algorithms Module's filters.

\section PAModuleClasses The Photoacoustic Algorithms Module's Classes

<ul>
  <li> mitk::PhotoacousticImage: The class where all filters are managed.
  <li> mitk::BeamformingSettings: The class used by many filters for storing the configuration to be used when applying them.
  <li> Five filters are currently implemented in the Photoacoustic Algorithms module:
  <ul>
    <li> mitk::PhotoacousticBModeFilter/mitk::PhotoacousticOCLBModeFilter: Two classes for the B-Mode filter on GPU and CPU.
    <li> Resampling Filter: A resampling filter for post-processing.
    <li> mitk::BeamformingFilter: A filter with a switch for GPU/CPU computation, to compute the beamformed image out of raw ultrasound/photoacoustic data.
    <li> Crop Filter: A filter for cropping artifacts on the upper and lower edges of the image.
    <li> Bandpass Filter: A Filter to filter image data in the fourier domain, using a tukey window to cut off low or high frequency parts of the image.
  </ul>
  </li>
</ul>
*/